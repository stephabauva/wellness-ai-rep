@context{domain:health_dashboard, feature:data_visibility_settings, version:1.0}

#ROOT
  ##dataVisibilitySettings{id:visibility_preferences, type:feature, @critical}
    "User preferences for health data visibility across the application"
    
    ##dataFlowTrace{id:complete_cycle, type:workflow, @critical}
      "Complete visibility settings workflow"
      
      ##settingsStructure{id:visibility_schema, type:data_model}
        "Visibility settings data structure"
        @evidence{
          file:"shared/schema.ts",
          lines:"15-23",
          code:"healthVisibilitySettings object in preferences"
        }
        @cluster{structure, type:schema}
          {
            visible_categories: ["lifestyle", "cardiovascular"],
            hidden_categories: ["medical", "advanced"],
            dashboard_preferences: {
              visible_metrics: ["steps", "heart_rate"],
              hidden_metrics: ["blood_glucose"],
              metric_order: ["steps", "heart_rate", "sleep"]
            }
          }
        @/cluster
      
      ##visibilityFlow{id:settings_application, type:layer}
        "How visibility settings are applied"
        
        ##settingsRetrieval{id:fetch_settings}
          "Retrieve user visibility preferences"
          @processing{
            source:"User preferences JSON",
            endpoint:"/api/health-consent/visibility",
            caching:"React Query with staleTime"
          }
        
        ##componentApplication{id:apply_visibility}
          "Apply settings in components"
          @cluster{application_points, type:ui}
            "HealthMetricsCard filtering"
            "KeyMetricsOverview selection"
            "Category tab visibility"
            "Chart data filtering"
          @/cluster
        
        ##cascadingRules{id:visibility_hierarchy}
          "Visibility rule hierarchy"
          @processing{
            order:[
              "1. Check hidden_categories",
              "2. Check hidden_metrics", 
              "3. Check visible_metrics",
              "4. Default to visible"
            ]
          }
      
      ##userInterface{id:settings_ui, type:layer}
        "UI for managing visibility"
        
        ##metricsVisibilityCard{id:settings_component}
          "MetricsVisibilityCard component"
          @file{path:"client/src/components/health/MetricsVisibilityCard.tsx"}
          @cluster{features, type:ui}
            "Toggle individual metrics"
            "Category-level controls"
            "Drag to reorder"
            "Preset configurations"
          @/cluster
        
        ##quickActions{id:bulk_visibility}
          "Quick visibility actions"
          @cluster{actions, type:interaction}
            "Show/Hide all in category"
            "Reset to defaults"
            "Save as preset"
            "Apply preset"
          @/cluster
      
      ##persistenceLayer{id:settings_storage, type:layer}
        "Store visibility preferences"
        
        ##userPreferences{id:database_storage}
          "Store in user preferences"
          @processing{
            table:"users.preferences",
            field:"healthVisibilitySettings",
            format:"JSON",
            merge:"Deep merge on update"
          }
        
        ##defaultSettings{id:new_user_defaults}
          "Default visibility for new users"
          @evidence{
            file:"KeyMetricsOverview.tsx",
            lines:"76-84",
            code:"const defaultSettings: MetricsVisibilitySettings"
          }
          @cluster{defaults, type:configuration}
            "Show common metrics"
            "Hide advanced/medical"
            "Sensible ordering"
          @/cluster
    
    ##integrationPoints{id:visibility_usage, type:layer}
      "Where visibility settings are used"
      
      ##dashboardIntegration{id:main_dashboard}
        "Dashboard component filtering"
        @cluster{usage, type:integration}
          "Filter health cards"
          "Hide empty categories"
          "Order metrics display"
          "Conditional rendering"
        @/cluster
      
      ##reportIntegration{id:export_filtering}
        "Apply to exports and reports"
        @processing{
          reports:"Include only visible",
          exports:"Respect preferences",
          sharing:"Filter before send"
        }
      
      ##aiIntegration{id:coaching_context}
        "AI respects visibility"
        @processing{
          context:"Only analyze visible data",
          recommendations:"Based on shown metrics",
          privacy:"Honor user choices"
        }
    
    ##architecturalLayers{id:layers, type:architecture}
      "Visibility settings architecture"
      
      ##presentationLayer{id:ui_components}
        @cluster{components, type:react}
          "Visibility toggle components"
          "Drag-and-drop ordering"
          "Category accordions"
          "Preset selectors"
        @/cluster
      
      ##stateLayer{id:settings_state}
        @cluster{state, type:management}
          "useHealthVisibilitySettings hook"
          "React Query caching"
          "Optimistic updates"
          "Local state sync"
        @/cluster
      
      ##dataLayer{id:persistence}
        @cluster{storage, type:database}
          "JSON in preferences"
          "Atomic updates"
          "Migration support"
          "Backup capability"
        @/cluster
    
    ##performanceConsiderations{id:optimization, type:performance}
      "Visibility performance impact"
      
      ##renderingOptimization{id:conditional_render}
        @cluster{optimizations, type:performance}
          "Skip hidden component mount"
          "Reduce DOM nodes"
          "Efficient filtering"
          "Memoized calculations"
        @/cluster
      
      ##dataOptimization{id:query_filtering}
        @cluster{optimizations, type:data}
          "Filter at query level"
          "Reduce payload size"
          "Cache filtered results"
          "Lazy load hidden data"
        @/cluster
    
    ##integrationEvidence{id:verified_integration, type:validation}
      "Visibility settings integration"
      
      ##hookImplementation{id:settings_hook}
        @evidence{
          file:"client/src/hooks/useHealthVisibilitySettings.ts",
          exists:true,
          purpose:"Visibility settings management"
        }
      
      ##componentUsage{id:filtering_implementation}
        @evidence{
          file:"HealthMetricsCard.tsx",
          lines:"102-120",
          code:"Visibility filtering logic"
        }
      
      ##apiEndpoint{id:settings_endpoint}
        @evidence{
          file:"health-routes.ts",
          lines:"251-310",
          code:"Visibility settings endpoints"
        }
    
    ##dependencies{id:feature_dependencies, type:graph}
      "Visibility settings dependencies"
      
      ##dataDependencies{id:settings_data}
        @cluster{data, type:dependency}
          "User preferences system"
          "Metric definitions"
          "Category mappings"
        @/cluster
      
      ##uiDependencies{id:components}
        @cluster{ui, type:dependency}
          "Toggle components"
          "Drag-drop library"
          "State management"
        @/cluster
    
    ##impacts{id:affected_features, type:graph}
      "Features impacted by visibility"
      
      ##userExperience{id:personalization}
        @cluster{effects, type:impact}
          "Personalized views"
          "Focused dashboards"
          "Privacy control"
          "Reduced overwhelm"
        @/cluster
      
      ##systemEfficiency{id:performance_gains}
        @cluster{effects, type:impact}
          "Faster rendering"
          "Smaller payloads"
          "Better mobile UX"
          "Reduced complexity"
        @/cluster