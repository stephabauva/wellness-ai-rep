@context{domain:health_dashboard, feature:sleep_quality_chart, version:1.0}

#ROOT
  ##sleepQualityChart{id:sleep_visualization, type:feature, @critical}
    "Sleep quality chart showing sleep stages and duration over time"
    
    ##dataFlowTrace{id:complete_cycle, type:workflow, @critical}
      "Complete data flow for sleep quality visualization"
      
      ##userAction{id:trigger, type:interaction, @passive}
        "Chart loads with dashboard when sleep data exists"
        @processing{
          trigger:"Dashboard render with sleep metrics",
          dataSource:"Processed sleep data from parent"
        }
      
      ##frontendFlow{id:client_processing, type:layer, @sequential}
        "Client-side sleep chart processing and rendering"
        
        ##componentProps{id:input_data}
          "Props for SleepQualityChart"
          @cluster{props, type:interface}
            "data: SleepDataPoint[]"
            "SleepDataPoint: { day: string; deep?: number; light?: number; rem?: number; total?: number; }"
          @/cluster
        
        ##dataPreparation{id:sleep_data_prep}
          "Parent component prepares sleep data"
          @evidence{
            file:"HealthDataSection.tsx",
            lines:"157-193",
            code:"const sleepChartData: SleepDataPoint[] = useMemo(() => {...})"
          }
          @processing{
            filtering:"Filter for sleep metrics",
            metrics:['sleep_deep', 'sleep_light', 'sleep_rem', 'sleep_total'],
            grouping:"Group by day",
            format:"Hours as decimal values"
          }
        
        ##chartConfiguration{id:sleep_chart_setup}
          "Configure sleep stage visualization"
          @cluster{chart_config, type:recharts}
            "StackedBarChart for sleep stages"
            "Different colors per sleep stage"
            "Total sleep line overlay"
            "Custom tooltips with stage details"
          @/cluster
        
        ##sleepStageMapping{id:stage_visualization}
          "Map sleep stages to visual elements"
          @cluster{stages, type:visualization}
            "Deep Sleep (dark blue, bottom)"
            "Light Sleep (light blue, middle)"
            "REM Sleep (purple, top)"
            "Total Sleep (line overlay)"
          @/cluster
      
      ##dataVisualization{id:chart_rendering, type:layer}
        "Render sleep quality chart"
        
        ##emptyStateHandling{id:no_sleep_data}
          "Handle missing sleep data"
          @processing{
            check:"if (!data || data.length === 0)",
            display:"Empty state with sleep icon",
            message:"No sleep data available"
          }
        
        ##chartLayout{id:visual_structure}
          "Sleep chart visual layout"
          @cluster{layout, type:ui_structure}
            "Card container with title 'Sleep Quality'"
            "Responsive height (h-[350px])"
            "Legend showing sleep stages"
            "Y-axis in hours"
            "X-axis showing days"
          @/cluster
        
        ##qualityIndicators{id:sleep_quality_metrics}
          "Additional sleep quality indicators"
          @cluster{indicators, type:metrics}
            "Average total sleep line"
            "Recommended 8-hour reference"
            "Sleep efficiency percentage"
            "Stage distribution"
          @/cluster
    
    ##architecturalLayers{id:layers, type:architecture}
      "Component architecture"
      
      ##presentationLayer{id:ui_components}
        @cluster{components, type:react}
          "SleepQualityChart.tsx - Main component"
          "Card components from Shadcn/ui"
          "Recharts BarChart with stacking"
          "Custom tooltip for stage details"
          "Moon icon from lucide-react"
        @/cluster
        @cluster{styling, type:ui}
          "Sleep-themed color palette"
          "Dark blues and purples"
          "Responsive chart sizing"
        @/cluster
      
      ##dataProcessingLayer{id:sleep_calculations}
        @cluster{calculations, type:logic}
          "Sleep efficiency calculation"
          "Stage percentage computation"
          "Weekly average calculation"
          "Quality score derivation"
        @/cluster
      
      ##visualizationLayer{id:chart_logic}
        @cluster{recharts_setup, type:library}
          "ResponsiveContainer wrapper"
          "ComposedChart for mixed types"
          "Stacked bars for stages"
          "Line for total/average"
        @/cluster
    
    ##errorBoundaries{id:error_handling, type:reliability}
      "Error handling strategies"
      
      ##dataValidation{id:sleep_validation}
        @cluster{checks, type:validation}
          "Validate sleep hours (0-24)"
          "Handle partial stage data"
          "Sum validation for stages"
        @/cluster
      
      ##visualProtection{id:render_safety}
        @cluster{safeguards, type:ui}
          "Fallback for invalid data"
          "Default stage colors"
          "Protected calculations"
        @/cluster
    
    ##performanceConsiderations{id:optimization, type:performance}
      "Performance optimizations"
      
      ##dataEfficiency{id:processing_optimization}
        @cluster{strategies, type:performance}
          "Parent-level data memoization"
          "Efficient stage aggregation"
          "Single-pass processing"
        @/cluster
      
      ##chartPerformance{id:render_optimization}
        @cluster{optimizations, type:rendering}
          "Static configuration objects"
          "Minimal re-renders"
          "Efficient tooltip updates"
        @/cluster
    
    ##healthInsights{id:sleep_understanding, type:medical}
      "Sleep health insights"
      
      ##stageImportance{id:sleep_stages}
        @cluster{education, type:health_info}
          "Deep sleep for recovery"
          "REM for memory consolidation"
          "Light sleep transitions"
          "Total duration recommendations"
        @/cluster
      
      ##qualityFactors{id:sleep_quality}
        @cluster{factors, type:analysis}
          "Stage distribution balance"
          "Consistency across days"
          "Total duration adequacy"
          "Sleep efficiency metrics"
        @/cluster
    
    ##integrationEvidence{id:verified_integration, type:validation}
      "Integration verification"
      
      ##parentUsage{id:dashboard_integration}
        @evidence{
          file:"HealthDataSection.tsx",
          lines:"471",
          code:"<SleepQualityChart data={sleepChartData} />"
        }
      
      ##dataProcessing{id:sleep_extraction}
        @evidence{
          file:"HealthDataSection.tsx",
          lines:"161-168",
          code:"const sleepData = allHealthData.filter(item => ...)"
        }
      
      ##componentFile{id:chart_component}
        @evidence{
          file:"client/src/components/health/SleepQualityChart.tsx",
          exists:true,
          purpose:"Renders sleep stage data"
        }
    
    ##dependencies{id:feature_dependencies, type:graph}
      "Component dependencies"
      
      ##dataDependencies{id:data_source}
        @cluster{sources, type:dependency}
          "Processed sleep data from parent"
          "Time range from dashboard"
          "User preferences for display"
        @/cluster
      
      ##visualDependencies{id:chart_libraries}
        @cluster{libraries, type:dependency}
          "Recharts for visualization"
          "Shadcn/ui for container"
          "Color utilities for stages"
        @/cluster
    
    ##impacts{id:affected_features, type:graph}
      "Features impacted by sleep chart"
      
      ##healthUnderstanding{id:sleep_patterns}
        @cluster{effects, type:impact}
          "Reveals sleep patterns"
          "Shows weekly consistency"
          "Identifies sleep issues"
        @/cluster
      
      ##coachingRelevance{id:ai_recommendations}
        @cluster{effects, type:impact}
          "AI uses for sleep coaching"
          "Recovery recommendations"
          "Schedule optimization"
        @/cluster