
{
  "_tableOfContents": {
    "domain": "file-manager",
    "features": [
      "create-category",
      "update-category",
      "delete-category",
      "category-tabs",
      "category-selector",
      "category-dropdown",
      "category-visualization"
    ],
    "totalFeatures": 7,
    "lastUpdated": "2025-01-10"
  },
  "create-category": {
    "_meta": {
      "feature": "create-category",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "User clicks create category button",
    "dataFlow": {
      "request": "CategorySelector → useFileApi.createCategory → /api/categories POST → fileCategories table",
      "response": "Database → API → React Query → Categories list refresh",
      "sideEffects": ["Category tabs update", "Category dropdown refresh"]
    },
    "files": {
      "ui": ["CategorySelector.tsx", "useFileApi.ts"],
      "api": ["server/routes.ts"],
      "data": ["fileCategories"],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": ["query:categories"],
      "refreshes": ["CategoryTabs", "CategoryDropdown", "CategorySelector"],
      "triggers": ["category-list-update"]
    },
    "errorPaths": {
      "network": "Retry with exponential backoff",
      "validation": "Name uniqueness validation",
      "business": "Max categories limit check"
    },
    "dependencies": {
      "internal": ["category-dropdown"],
      "external": [],
      "shared": ["useFileApi"]
    }
  },
  "update-category": {
    "_meta": {
      "feature": "update-category",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "User selects category to edit and saves changes",
    "dataFlow": {
      "request": "CategorySelector → useFileApi.updateCategory → /api/categories/:id PUT → fileCategories table",
      "response": "Database → API → React Query → Categories list refresh",
      "sideEffects": ["File list refresh for affected files", "Category visualization update"]
    },
    "files": {
      "ui": ["CategorySelector.tsx", "useFileApi.ts"],
      "api": ["server/routes.ts"],
      "data": ["fileCategories"],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": ["query:categories", "query:files"],
      "refreshes": ["CategoryTabs", "CategoryDropdown", "FileList"],
      "triggers": ["category-update", "file-refresh"]
    },
    "errorPaths": {
      "network": "Revert to previous state",
      "validation": "Field validation errors",
      "business": "System category protection"
    },
    "dependencies": {
      "internal": ["category-visualization"],
      "external": [],
      "shared": ["useFileApi"]
    }
  },
  "delete-category": {
    "_meta": {
      "feature": "delete-category",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "User selects category to delete and confirms",
    "dataFlow": {
      "request": "CategorySelector → useFileApi.deleteCategory → /api/categories/:id DELETE → fileCategories table",
      "response": "Database → API → React Query → Categories and files refresh",
      "sideEffects": ["Files moved to uncategorized", "Tab removal"]
    },
    "files": {
      "ui": ["CategorySelector.tsx", "useFileApi.ts"],
      "api": ["server/routes.ts"],
      "data": ["fileCategories", "files"],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": ["query:categories", "query:files"],
      "refreshes": ["CategoryTabs", "CategoryDropdown", "FileList"],
      "triggers": ["category-removal", "file-recategorization"]
    },
    "errorPaths": {
      "network": "Retry with confirmation",
      "validation": "Category in use validation",
      "business": "System category protection"
    },
    "dependencies": {
      "internal": ["category-tabs"],
      "external": [],
      "shared": ["useFileApi"]
    }
  },
  "category-tabs": {
    "_meta": {
      "feature": "category-tabs",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "User clicks category tab",
    "dataFlow": {
      "request": "CategoryTabs → useFileManagerState.setActiveTab → state update",
      "response": "State update → FileList filter → UI refresh",
      "sideEffects": ["File list filtering", "Active tab highlighting"]
    },
    "files": {
      "ui": ["CategoryTabs.tsx", "useFileManagerState.ts"],
      "api": [],
      "data": [],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": [],
      "refreshes": ["FileList"],
      "triggers": ["file-filtering"]
    },
    "errorPaths": {
      "network": "N/A - local state only",
      "validation": "Fallback to 'All' tab",
      "business": "Tab availability check"
    },
    "dependencies": {
      "internal": ["category-visualization"],
      "external": [],
      "shared": ["useFileManagerState"]
    }
  },
  "category-selector": {
    "_meta": {
      "feature": "category-selector",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "User selects files and chooses category for bulk categorization",
    "dataFlow": {
      "request": "CategorySelector → useFileApi.categorizeFiles → /api/files/categorize PATCH → files table",
      "response": "Database → API → React Query → File list refresh",
      "sideEffects": ["File categorization update", "Category count update"]
    },
    "files": {
      "ui": ["CategorySelector.tsx", "FileActionsToolbar.tsx", "useFileApi.ts"],
      "api": ["server/routes.ts"],
      "data": ["files"],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": ["query:files"],
      "refreshes": ["FileList", "CategoryTabs"],
      "triggers": ["bulk-categorization"]
    },
    "errorPaths": {
      "network": "Partial success handling",
      "validation": "File permission validation",
      "business": "Category availability check"
    },
    "dependencies": {
      "internal": ["category-dropdown"],
      "external": [],
      "shared": ["useFileApi"]
    }
  },
  "category-dropdown": {
    "_meta": {
      "feature": "category-dropdown",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "User opens category dropdown for selection",
    "dataFlow": {
      "request": "CategoryDropdown → useFileApi.getCategories → /api/categories GET → fileCategories table",
      "response": "Database → API → React Query → Dropdown populate",
      "sideEffects": ["Category list display"]
    },
    "files": {
      "ui": ["CategoryDropdown.tsx", "useFileApi.ts"],
      "api": ["server/routes.ts"],
      "data": ["fileCategories"],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": [],
      "refreshes": ["CategoryDropdown"],
      "triggers": ["category-list-load"]
    },
    "errorPaths": {
      "network": "Show cached categories",
      "validation": "Empty state display",
      "business": "System categories fallback"
    },
    "dependencies": {
      "internal": ["category-visualization"],
      "external": [],
      "shared": ["useFileApi"]
    }
  },
  "category-visualization": {
    "_meta": {
      "feature": "category-visualization",
      "domain": "file-manager",
      "lastUpdated": "2025-01-10",
      "status": "active"
    },
    "trigger": "Categories displayed with visual styling",
    "dataFlow": {
      "request": "UI components → category data → visual rendering",
      "response": "Icons, colors, and styling applied",
      "sideEffects": ["Visual consistency across components"]
    },
    "files": {
      "ui": ["CategoryTabs.tsx", "CategoryDropdown.tsx", "FileList.tsx"],
      "api": [],
      "data": [],
      "types": ["shared/schema.ts"]
    },
    "cacheFlow": {
      "invalidates": [],
      "refreshes": ["CategoryTabs", "CategoryDropdown", "FileList"],
      "triggers": ["visual-update"]
    },
    "errorPaths": {
      "network": "N/A - visual only",
      "validation": "Default icon/color fallback",
      "business": "System category styling"
    },
    "dependencies": {
      "internal": [],
      "external": [],
      "shared": ["CategoryTabs", "CategoryDropdown"]
    }
  }
}
