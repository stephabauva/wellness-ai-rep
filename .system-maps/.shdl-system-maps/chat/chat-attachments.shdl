
@context{domain:chat, feature_group:attachments, format:shdl, version:2.0.0, complexity:high, enforcement:strict}
@meta{last_updated:"2025-01-27T10:00:00Z", validation_status:partial, token_estimate:850, critical_paths:12, processing_priority:1}

#CHAT_ATTACHMENTS{confidence:1.0, integration_status:partial, @critical}
  ##feature_definition{id:chat_attachments_root, type:foundational, confidence:1.0}
    "Complete file attachment and audio processing system for chat messages with preview capabilities"
    →primary_user_workflow[attach_files→preview_content→send_message→view_attachments]
    →dependencies[file_manager, core_messaging, transcription_service]
    →user_workflows[attach_files, preview_attachments, manage_media, record_audio, transcribe_speech]

  @cluster{core_workflow, confidence:1.0}
    ##file_attachment_workflow{id:primary_attachment_flow, type:user_journey, confidence:1.0}
      "Complete file attachment process from user action to message persistence"
      @processing{
        user_clicks_paperclip→file_selection_validation→upload_with_progress→
        metadata_storage→preview_generation→message_association→send_message
      }
      @data_flow{
        ui_trigger:[ChatInputArea, paperclip_button],
        file_processing:[useFileManagement, validation, upload],
        storage:[POST_/api/files, file_metadata],
        message_integration:[chat_message_creation, attachment_references]
      }

    ##audio_recording_workflow{id:audio_capture_flow, type:user_journey, confidence:0.7}
      "Audio recording and transcription workflow"
      @processing{
        user_clicks_microphone→audio_recording→transcription_processing→
        audio_file_storage→message_attachment→send_with_transcript
      }
      @data_flow{
        audio_capture:[AudioRecorder, Web_Speech_API],
        transcription:[client_side_only, expected_server_side],
        storage:[missing_audio_endpoints, no_transcription_persistence]
      }
  @/cluster

  @cluster{frontend_components, confidence:1.0}
    ##presentation_layer{id:ui_components, type:client_side, confidence:1.0}
      ChatInputArea{
        path:"client/src/components/ChatInputArea.tsx",
        uses:[useFileManagement, AttachmentPreview, AudioRecorder],
        integrations:[file_upload_api, chat_message_api],
        status:verified
      },
      AttachmentPreview{
        path:"client/src/components/AttachmentPreview.tsx",
        uses:[useFileApi],
        functions:[preview_generation, fullsize_viewing, download_handling],
        status:verified
      },
      AudioRecorder{
        path:"client/src/components/AudioRecorder.tsx",
        uses:[audio_service, Web_Speech_API],
        limitations:[client_side_transcription_only],
        status:partial
      }

    ##frontend_logic{id:hooks_and_services, confidence:1.0}
      useFileManagement{
        path:"client/src/hooks/useFileManagement.ts",
        functions:[file_selection, upload_progress, validation],
        api_calls:[POST_/api/files],
        status:active
      },
      useFileApi{
        path:"client/src/hooks/useFileApi.ts",
        functions:[file_retrieval, metadata_access],
        api_calls:[GET_/api/files/:id],
        status:active
      },
      audio_service{
        path:"client/src/services/audio-service.ts",
        functions:[audio_recording, client_transcription],
        browser_apis:[Web_Speech_API],
        status:partial
      }
  @/cluster

  @cluster{backend_services, confidence:0.7}
    ##business_logic_layer{id:server_components, type:server_side, confidence:0.7}
      file_routes{
        path:"server/routes/file-routes.ts",
        endpoints:[POST_/api/files, GET_/api/files/:id],
        functions:[generic_file_handling],
        status:active,
        @architectural_issue{bypasses_chat_specific_handling:true}
      },
      chat_routes{
        path:"server/routes/chat-routes.ts",
        missing_endpoints:[POST_/api/chat/attachments, GET_/api/chat/attachments/:id, POST_/api/chat/transcribe],
        expected_functions:[chat_specific_attachment_handling, transcription_processing],
        status:incomplete,
        @critical_gap
      }

    ##services{id:backend_processing, confidence:0.4}
      transcription_service{
        expected_path:"server/services/transcription-service.ts",
        functions:[server_side_audio_transcription, transcription_persistence],
        status:missing,
        current_limitation:client_side_web_speech_api_only,
        @blocking_issue
      }
  @/cluster

  @cluster{data_layer, confidence:1.0}
    ##database{id:persistence_schema, confidence:1.0}
      message_attachments{
        table_definition:true,
        columns:["id", "message_id", "file_path", "file_name", "file_size", "mime_type", "created_at"],
        relationships:[message_id→messages.id],
        status:schema_defined_but_not_integrated,
        @integration_gap
      },
      transcriptions{
        table_definition:true,
        columns:["id", "attachment_id", "text_content", "confidence_score", "created_at"],
        relationships:[attachment_id→message_attachments.id],
        status:schema_defined_but_not_integrated,
        @integration_gap
      }

    ##file_system{id:storage_management, confidence:1.0}
      upload_paths{
        directories:["/uploads", "/temp"],
        file_types:[images, documents, audio, video],
        processing:[metadata_extraction, preview_generation],
        status:active
      }
  @/cluster

  @cluster{api_endpoints, confidence:0.6}
    ##current_endpoints{id:existing_apis, confidence:1.0}
      POST_/api/files{
        handler:"server/routes/file-routes.ts",
        description:"Generic file upload endpoint",
        status:active,
        issue:bypasses_chat_specific_handling
      },
      GET_/api/files/:id{
        handler:"server/routes/file-routes.ts",
        description:"Generic file retrieval endpoint",
        status:active,
        issue:not_chat_context_aware
      }

    ##missing_endpoints{id:required_apis, confidence:1.0, @critical_gaps}
      POST_/api/chat/attachments{
        expected_handler:"server/routes/chat-routes.ts",
        description:"Chat-specific file attachment endpoint",
        required_functions:[file_upload, message_association, metadata_storage],
        status:missing,
        @blocking
      },
      GET_/api/chat/attachments/:id{
        expected_handler:"server/routes/chat-routes.ts",
        description:"Chat-specific attachment retrieval",
        required_functions:[attachment_access, permission_validation],
        status:missing
      },
      POST_/api/chat/transcribe{
        expected_handler:"server/routes/chat-routes.ts",
        description:"Server-side audio transcription endpoint",
        required_functions:[audio_processing, transcription_generation, persistence],
        status:missing,
        @critical
      }
  @/cluster

  @cluster{integration_flows, confidence:0.7}
    ##data_flow_tracing{id:complete_request_cycles, confidence:0.7}
      file_attachment_flow{
        frontend_flow:[ChatInputArea→useFileManagement→validation→upload_progress],
        api_call:[POST_/api/files],
        backend_flow:[file_routes→file_storage→metadata_extraction],
        database_ops:[file_metadata_storage],
        response_flow:[file_reference→frontend_cache→preview_generation],
        @architectural_bypass{should_use:POST_/api/chat/attachments}
      },
      
      attachment_preview_flow{
        frontend_flow:[AttachmentPreview→useFileApi→file_request],
        api_call:[GET_/api/files/:id],
        backend_flow:[file_routes→file_retrieval→stream_response],
        @integration_note{works_but_not_chat_context_aware}
      },
      
      audio_transcription_flow{
        frontend_flow:[AudioRecorder→audio_service→Web_Speech_API],
        limitation:[client_side_only, no_server_persistence],
        expected_flow:[AudioRecorder→POST_/api/chat/transcribe→server_transcription→database_storage],
        status:incomplete,
        @critical_gap
      }
  @/cluster

  @cluster{error_boundaries, confidence:1.0}
    ##frontend_errors{id:client_error_handling, confidence:1.0}
      file_upload_errors{
        types:[file_size_exceeded, invalid_file_type, network_timeout],
        handling:[user_notification, retry_mechanism, fallback_options],
        status:implemented
      },
      audio_recording_errors{
        types:[microphone_permission_denied, browser_compatibility, transcription_failure],
        handling:[permission_requests, fallback_messages, error_recovery],
        status:partial
      }

    ##backend_errors{id:server_error_handling, confidence:0.7}
      file_processing_errors{
        types:[storage_failure, metadata_extraction_failure, virus_scanning],
        current_handling:[basic_error_responses],
        needed_improvements:[detailed_error_codes, recovery_strategies],
        status:basic
      }
  @/cluster

  @cluster{performance_optimization, confidence:0.8}
    ##frontend_optimizations{id:client_performance, confidence:0.8}
      file_upload_optimization{
        techniques:[chunked_upload, progress_tracking, concurrent_uploads],
        status:partial,
        improvements_needed:[resume_capability, compression]
      },
      preview_optimization{
        techniques:[lazy_loading, thumbnail_caching, progressive_loading],
        status:active
      }

    ##backend_optimizations{id:server_performance, confidence:0.6}
      file_processing_optimization{
        needed:[streaming_uploads, async_processing, thumbnail_generation],
        current_limitations:[synchronous_processing, limited_file_types],
        status:basic
      }
  @/cluster

  @cluster{security_privacy, confidence:0.9}
    ##authentication{id:access_control, confidence:0.9}
      file_access_control{
        current:[basic_file_permissions],
        needed:[user_specific_access, message_context_validation],
        gaps:[no_chat_context_awareness],
        status:partial
      }

    ##data_protection{id:file_security, confidence:0.9}
      file_storage_security{
        implemented:[secure_upload_paths, file_type_validation],
        needed:[virus_scanning, encryption_at_rest, access_logging],
        status:basic
      }
  @/cluster

##integration_status_summary{id:feature_status_overview, confidence:1.0}
  file_attachments{
    status:partial,
    working_features:[file_upload, preview_display, basic_storage],
    critical_gaps:[chat_specific_endpoints, message_attachment_persistence],
    impact:medium,
    user_experience:functional_but_incomplete
  },
  attachment_preview{
    status:active,
    working_features:[image_preview, document_display, download_capability],
    minor_gaps:[chat_context_awareness],
    impact:low,
    user_experience:fully_functional
  },
  audio_processing{
    status:partial,
    working_features:[audio_recording, client_side_transcription],
    critical_gaps:[server_side_transcription, audio_persistence, transcription_storage],
    impact:high,
    user_experience:limited_functionality
  }

@processing{
  critical_concepts:[file_attachment_workflow, audio_transcription_gaps, chat_specific_integration],
  sequential_required:[file_upload, metadata_processing, message_association, storage_persistence],
  parallel_possible:[preview_generation, transcription_processing, virus_scanning],
  quality_gates:[chat_integration_complete, server_transcription_implemented, database_integration_active]
}

@validation{
  integration_evidence:[attachment_preview_component_verified, file_upload_functionality_tested],
  critical_gaps:[POST_/api/chat/attachments_missing, server_side_transcription_missing, message_attachment_table_not_integrated],
  architectural_issues:[bypasses_chat_handlers, uses_generic_file_endpoints, client_side_transcription_limitation],
  user_impact:[attachments_dont_persist_with_messages, limited_audio_transcription_capability, no_chat_context_in_file_access],
  blocking_violations:[missing_chat_specific_endpoints, incomplete_database_integration, no_server_transcription]
}

@dependencies{
  internal:[file_manager, core_messaging, chat_routes],
  external:[Web_Speech_API],
  missing:[server_side_transcription_service, chat_specific_attachment_handlers, message_attachment_integration],
  architectural:[complete_chat_attachment_system_integration_required]
}
