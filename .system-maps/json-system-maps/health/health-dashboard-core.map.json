{
  "_tableOfContents": {
    "domain": "health-dashboard",
    "features": [
      "health-data-display",
      "time-range-switching",
      "metric-aggregation",
      "sample-data-loading",
      "health-report-download",
      "native-health-sync"
    ],
    "totalFeatures": 6,
    "lastUpdated": "2025-07-12"
  },
  "_meta": {
    "domain": "health-dashboard",
    "description": "Mobile-first health dashboard with component-based architecture",
    "architecture": "React + Express + PostgreSQL",
    "status": "active",
    "complexity": "modular",
    "lastMajorChange": "2025-07-15 - Implemented mobile-first UI with component breakdown"
  },
  "components": {
    "core": {
      "HealthDashboard.tsx": {
        "path": "client/src/components/health/dashboard/HealthDashboard.tsx",
        "type": "react-component",
        "lines": 320,
        "responsibilities": [
          "Component orchestration",
          "Data fetching",
          "State management",
          "Mobile-first layout"
        ],
        "imports": 5,
        "complexity": "moderate",
        "note": "Refactored into mobile-first component architecture"
      },
      "MobileHeader.tsx": {
        "path": "client/src/components/health/dashboard/MobileHeader.tsx",
        "type": "react-component",
        "lines": 60,
        "responsibilities": [
          "Sticky header navigation",
          "Time range selection",
          "Mobile-optimized UI"
        ],
        "imports": 2,
        "complexity": "low"
      },
      "HeroSection.tsx": {
        "path": "client/src/components/health/dashboard/HeroSection.tsx",
        "type": "react-component",
        "lines": 80,
        "responsibilities": [
          "Wellness score display",
          "Gradient background",
          "Progress visualization"
        ],
        "imports": 2,
        "complexity": "low"
      },
      "MetricsGrid.tsx": {
        "path": "client/src/components/health/dashboard/MetricsGrid.tsx",
        "type": "react-component",
        "lines": 140,
        "responsibilities": [
          "Health metrics display",
          "2x3 mobile grid layout",
          "Metric cards with icons"
        ],
        "imports": 2,
        "complexity": "moderate"
      },
      "ActivityScroll.tsx": {
        "path": "client/src/components/health/dashboard/ActivityScroll.tsx",
        "type": "react-component",
        "lines": 130,
        "responsibilities": [
          "Horizontal scrolling insights",
          "Activity progress cards",
          "Touch-friendly interactions"
        ],
        "imports": 2,
        "complexity": "moderate"
      },
      "ActionButtons.tsx": {
        "path": "client/src/components/health/dashboard/ActionButtons.tsx",
        "type": "react-component",
        "lines": 100,
        "responsibilities": [
          "Action button grid",
          "Touch-friendly buttons",
          "Loading states"
        ],
        "imports": 2,
        "complexity": "low"
      }
    },
    "api": {
      "simple-health-routes.ts": {
        "path": "server/routes/simple-health-routes.ts",
        "type": "api-routes",
        "lines": 80,
        "responsibilities": [
          "health data API",
          "sample data loading",
          "metric removal",
          "native sync"
        ],
        "endpoints": 4,
        "complexity": "low"
      }
    },
    "services": {
      "storage-interface": {
        "path": "server/storage.ts",
        "type": "data-layer",
        "responsibilities": [
          "health data queries",
          "time filtering",
          "aggregation",
          "caching"
        ],
        "complexity": "moderate"
      }
    }
  },
  "endpoints": {
    "GET /api/health-data": {
      "method": "GET",
      "purpose": "Fetch health metrics with time range filtering",
      "parameters": [
        "range"
      ],
      "response": "HealthMetric[]",
      "caching": "LRU cache with 30s TTL"
    },
    "POST /api/health-data/load-sample": {
      "method": "POST",
      "purpose": "Load sample health data for development/testing",
      "response": "{ recordsLoaded: number }",
      "effect": "Cache invalidation"
    },
    "POST /api/health-data/remove-metrics": {
      "method": "POST",
      "purpose": "Remove selected metric types",
      "body": "{ dataTypes: string[] }",
      "response": "{ deletedCount: number }"
    },
    "POST /api/health-data/native-sync": {
      "method": "POST",
      "purpose": "Sync with native health apps (iOS/Android)",
      "body": "{ dataTypes?: string[], timeRange?: string }",
      "response": "{ recordsProcessed: number }"
    }
  },
  "database": {
    "tables": {
      "health_data": {
        "purpose": "Store health metrics with timestamps",
        "key_columns": [
          "user_id",
          "data_type",
          "timestamp"
        ],
        "indexes": [
          "user_time_range",
          "data_type_filtering"
        ],
        "retention": "configurable"
      },
      "sample_health_data": {
        "purpose": "Template health data for development",
        "structure": "mirrors health_data",
        "size": "2,288 records covering 90 days"
      }
    }
  },
  "integrations": {
    "react_query": {
      "purpose": "Data fetching and caching",
      "queries": [
        "health-data with time range"
      ],
      "mutations": [
        "load-sample",
        "remove-metrics",
        "native-sync"
      ],
      "cache_strategy": "staleTime: 0, gcTime: 30s"
    },
    "toast_notifications": {
      "purpose": "User feedback",
      "triggers": [
        "success operations",
        "error handling"
      ],
      "types": [
        "success",
        "error",
        "loading"
      ]
    }
  },
  "dependencies": {
    "crossDomain": [
      {
        "file": "client/src/services/native-health-service.ts",
        "importedBy": [
          {
            "domain": "shared/services",
            "file": "client/src/services/platform-detection-global.ts"
          }
        ]
      },
      {
        "file": "client/src/components/health/dashboard/HealthDashboard.tsx",
        "importedBy": [
          {
            "domain": "unknown/needs-classification",
            "file": "client/src/pages/home.tsx"
          }
        ]
      },
      {
        "file": "server/services/health-data-parser.ts",
        "importedBy": [
          {
            "domain": "infrastructure/routing",
            "file": "server/routes/shared-dependencies.ts"
          }
        ]
      },
      {
        "file": "server/services/health-data-deduplication.ts",
        "importedBy": [
          {
            "domain": "infrastructure/routing",
            "file": "server/routes/shared-dependencies.ts"
          }
        ]
      },
      {
        "file": "server/services/health-consent-service.ts",
        "importedBy": [
          {
            "domain": "infrastructure/routing",
            "file": "server/routes/shared-dependencies.ts"
          }
        ]
      }
    ],
    "internal": 0
  },
  "lastUpdated": "2025-07-13T13:01:11.715Z",
  "dependencyAnalysis": {
    "lastAnalyzed": "2025-07-13T13:01:11.716Z",
    "crossDomainFiles": 5,
    "internalFiles": 0,
    "totalDependencies": 5
  }
}