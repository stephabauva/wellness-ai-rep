{
  "_metadata": {
    "featureName": "native-health-sync",
    "featureGroup": "health-dashboard",
    "parentFile": "health-dashboard-core.map.json",
    "domain": "health",
    "description": "Sync health data from native device health apps (iOS Health, Google Fit)",
    "userFlow": [
      "User clicks 'Sync with Phone' button",
      "System detects platform capabilities",
      "Native health permissions requested if needed",
      "Health data synced from device health app",
      "Dashboard refreshes with new data"
    ],
    "components": [
      "Sync button",
      "platform detection",
      "native health service"
    ],
    "lastUpdated": "2025-07-12",
    "status": "active"
  },
  "trigger": "User clicks 'Sync with Phone' button in health dashboard actions",
  "dataFlow": {
    "request": "Button click → nativeSyncMutation → POST /api/health-data/native-sync → Platform detection → Native health API calls",
    "response": "Device health data → Processing/validation → Database storage → Cache invalidation → UI refresh",
    "sideEffects": [
      "Permission requests",
      "Cache invalidation",
      "Background processing",
      "User notifications"
    ]
  },
  "files": {
    "ui": [
      "client/src/components/SimpleHealthDashboard.tsx (nativeSyncMutation)",
      "client/src/services/native-health-service.ts"
    ],
    "api": [
      "server/routes/simple-health-routes.ts (POST /api/health-data/native-sync)"
    ],
    "data": [
      "health_data table (destination)",
      "native device health stores (source)"
    ],
    "types": [
      "native sync request/response types",
      "HealthMetric interface"
    ]
  },
  "cacheFlow": {
    "invalidates": [
      "queryClient.invalidateQueries({ queryKey: ['health-data'] })"
    ],
    "refreshes": [
      "entire health dashboard",
      "all time range views"
    ],
    "triggers": [
      "new data availability",
      "dashboard re-render"
    ],
    "crossDomainInvalidates": [
      "query:health",
      "query:shared/services",
      "query:unknown/needs-classification",
      "query:infrastructure/routing"
    ]
  },
  "errorPaths": {
    "network": "Error toast with sync failure message",
    "validation": "Permission denied handling with user guidance",
    "business": "Unsupported platform graceful degradation"
  },
  "dependencies": {
    "internal": [
      "health-data-display",
      "platform-detection"
    ],
    "external": [
      "Capacitor Health plugin",
      "Native device APIs"
    ],
    "shared": [
      "Button component",
      "toast notifications"
    ]
  },
  "implementation": {
    "platform_support": {
      "ios": "HealthKit integration via Capacitor Health plugin",
      "android": "Google Fit integration via Capacitor Health plugin",
      "web": "Graceful degradation with informative message",
      "detection": "Automatic platform detection and capability checking"
    },
    "data_types": {
      "supported": [
        "steps",
        "heart_rate",
        "sleep",
        "weight",
        "body_fat",
        "calories"
      ],
      "mapping": "Native data types mapped to internal HealthMetric format",
      "validation": "Data validation and deduplication during sync",
      "time_range": "Configurable sync period (default: last 30 days)"
    },
    "user_experience": {
      "permissions": "Clear permission request flow with explanations",
      "feedback": "Progress indicators and success/error messages",
      "frequency": "Manual sync with option for background sync",
      "conflict_resolution": "Latest data wins with timestamp comparison"
    }
  },
  "future_enhancements": {
    "background_sync": "Automatic periodic sync in background",
    "selective_sync": "User choice of which data types to sync",
    "sync_history": "Track sync operations and status",
    "conflict_resolution": "Advanced merge strategies for overlapping data"
  },
  "lastUpdated": "2025-07-13T13:01:11.718Z",
  "dependencyAnalysis": {
    "lastAnalyzed": "2025-07-13T13:01:11.718Z",
    "crossDomainFiles": 5,
    "internalFiles": 0,
    "totalDependencies": 5
  }
}