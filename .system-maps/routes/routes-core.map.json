{
  "name": "Routes Core Architecture",
  "version": "1.0.0",
  "description": "Modular routes system breaking down massive monolithic routes.ts into domain-specific modules",
  "created": "2025-06-27",
  "type": "system_map",
  "domain": "routes",
  
  "architecture": {
    "pattern": "modular_routes",
    "principles": [
      "Domain separation",
      "Line count limits per module",
      "Shared dependency management",
      "Emergency fallback capability"
    ]
  },

  "modules": {
    "chat-routes": {
      "file": "server/routes/chat-routes.ts",
      "maxLines": 280,
      "currentLines": 259,
      "status": "complete",
      "responsibilities": [
        "Message streaming",
        "Conversation management", 
        "Audio transcription",
        "File uploads via chat"
      ],
      "endpoints": [
        "GET /api/messages",
        "POST /api/messages/stream",
        "POST /api/messages",
        "GET /api/conversations",
        "GET /api/conversations/:id/messages",
        "POST /api/transcribe/openai",
        "POST /api/transcribe/google"
      ]
    },
    
    "health-routes": {
      "file": "server/routes/health-routes.ts", 
      "maxLines": 300,
      "currentLines": 278,
      "status": "complete",
      "responsibilities": [
        "Health data CRUD",
        "Apple Health import/export",
        "Native health integration",
        "Health consent management",
        "Go service acceleration",
        "CDA format support"
      ],
      "endpoints": [
        "GET /api/health-data",
        "GET /api/health-data/categories",
        "POST /api/health-data/parse",
        "POST /api/health-data/import",
        "DELETE /api/health-data/reset",
        "GET /api/health-data/native/capabilities",
        "POST /api/health-data/native/sync",
        "POST /api/health-data/background-sync"
      ]
    },
    
    "memory-routes": {
      "file": "server/routes/memory-routes.ts",
      "maxLines": 280, 
      "currentLines": 280,
      "status": "complete",
      "responsibilities": [
        "Memory CRUD operations",
        "ChatGPT memory enhancement",
        "Memory relationships",
        "Atomic facts processing",
        "Deduplication system",
        "Performance optimization"
      ],
      "endpoints": [
        "GET /api/memories",
        "GET /api/memories/overview",
        "POST /api/memories/manual",
        "POST /api/memories/enhance",
        "GET /api/memories/relationships",
        "POST /api/memories/atomic-facts",
        "GET /api/memories/performance-report"
      ]
    },
    
    "file-routes": {
      "file": "server/routes/file-routes.ts",
      "maxLines": 270,
      "currentLines": 226, 
      "status": "complete",
      "responsibilities": [
        "File upload/download",
        "File categorization",
        "Go service integration",
        "Retention management",
        "Metadata extraction"
      ],
      "endpoints": [
        "GET /api/files",
        "POST /api/files/upload",
        "DELETE /api/files/:id",
        "POST /api/files/:id/categorize",
        "GET /api/files/categories"
      ]
    },
    
    "settings-routes": {
      "file": "server/routes/settings-routes.ts",
      "maxLines": 250,
      "currentLines": 132,
      "status": "complete", 
      "responsibilities": [
        "User preferences",
        "AI configuration",
        "Device management",
        "Coaching settings",
        "PDF report generation"
      ],
      "endpoints": [
        "GET /api/settings",
        "POST /api/settings",
        "GET /api/settings/ai-config",
        "POST /api/settings/ai-config",
        "GET /api/settings/devices",
        "POST /api/settings/devices",
        "GET /api/settings/pdf-report"
      ]
    },
    
    "monitoring-routes": {
      "file": "server/routes/monitoring-routes.ts",
      "maxLines": 260,
      "currentLines": 179,
      "status": "complete",
      "responsibilities": [
        "Cache statistics",
        "Go service proxies", 
        "Performance monitoring",
        "Health checks",
        "Feature flags management"
      ],
      "endpoints": [
        "GET /api/cache/stats",
        "POST /api/cache/clear",
        "GET /api/accelerate/health",
        "POST /api/accelerate/start",
        "POST /api/memory/feature-flags-test",
        "GET /api/memory/performance-monitoring-test"
      ]
    }
  },

  "infrastructure": {
    "shared-dependencies": {
      "file": "server/routes/shared-dependencies.ts",
      "maxLines": 50,
      "currentLines": 50,
      "purpose": "Centralized imports to prevent duplication"
    },
    
    "shared-utils": {
      "file": "server/routes/shared-utils.ts", 
      "maxLines": 200,
      "currentLines": 157,
      "purpose": "Common utilities and Go service management"
    },
    
    "index": {
      "file": "server/routes/index.ts",
      "maxLines": 60,
      "currentLines": 38, 
      "purpose": "Central route registration and configuration"
    }
  },

  "validation": {
    "script": "validate-routes.sh",
    "enforcement": "automated_line_count_checking",
    "status": "PASSED",
    "totalLines": 1599,
    "modules": 9
  },

  "safety_measures": {
    "emergency_fallback": "USE_MONOLITHIC_ROUTES=true",
    "feature_flags": "Individual module enable/disable",
    "replit_safety": "No modifications to vite.config.ts or HMR",
    "rollback": "Original routes.ts preserved as backup"
  },

  "benefits": {
    "maintainability": "300-line modules vs 3800-line monolith",
    "parallel_development": "Teams can work on separate domains",
    "testing": "Domain-specific unit testing",
    "debugging": "Isolated error investigation"
  },

  "implementation_status": {
    "phase_1": "COMPLETE - Infrastructure setup and system maps",
    "phase_2": "COMPLETE - All 6 domain modules extracted", 
    "phase_3": "COMPLETE - Integration and system maps validation",
    "completion_date": "2025-06-27"
  },

  "production_ready": {
    "modular_architecture": true,
    "line_count_compliance": true,
    "server_integration": true,
    "zero_breaking_changes": true,
    "system_maps_updated": true
  }
}