@context{domain:health_dashboard, feature:health_data_consent, version:1.0}

#ROOT
  ##healthDataConsent{id:consent_management, type:feature, @critical}
    "Health data consent and privacy management system"
    
    ##dataFlowTrace{id:complete_cycle, type:workflow, @critical}
      "Complete consent management workflow"
      
      ##userAction{id:trigger, type:interaction, @active}
        "User manages health data consent"
        @processing{
          access:"Settings → Privacy → Health Data Consent",
          interface:"HealthDataConsentSettings component"
        }
      
      ##frontendFlow{id:client_processing, type:layer, @sequential}
        "Client-side consent management"
        
        ##consentComponent{id:settings_ui}
          "HealthDataConsentSettings component"
          @file{path:"client/src/components/settings/HealthDataConsentSettings.tsx"}
          @cluster{sections, type:ui}
            "AI Access Consent toggles"
            "Retention Policy settings"
            "Export Controls configuration"
            "Data Visibility preferences"
          @/cluster
        
        ##consentCategories{id:consent_types}
          "Types of consent managed"
          @cluster{categories, type:consent}
            "ai_access: AI can analyze data"
            "retention: How long to keep data"
            "sharing: Data export permissions"
            "visibility: What user sees"
          @/cluster
        
        ##consentAPI{id:api_calls}
          "Consent management API calls"
          @processing{
            fetch:"GET /api/health-consent",
            update:"PATCH /api/health-consent",
            response:"HealthConsentSettings object"
          }
      
      ##backendFlow{id:server_processing, type:layer}
        "Server-side consent handling"
        
        ##consentService{id:consent_service}
          "Health consent service"
          @file{path:"server/services/health-consent-service.ts"}
          @cluster{methods, type:service}
            "getUserConsentSettings(userId)"
            "updateConsentSettings(userId, updates)"
            "transformConsentToSettings(records)"
            "checkConsentForCategory(userId, category)"
          @/cluster
        
        ##consentSchema{id:data_structure}
          "Consent data structure"
          @evidence{
            file:"shared/schema.ts",
            lines:"534-551",
            code:"export const userHealthConsent = pgTable(...)"
          }
          @cluster{fields, type:database}
            "userId: User reference"
            "category: Health category"
            "consentType: Type of consent"
            "isEnabled: Boolean flag"
            "retentionDays: Data retention"
          @/cluster
        
        ##consentValidation{id:access_control}
          "Validate consent for operations"
          @processing{
            checkPoints:[
              "AI analysis requests",
              "Data export operations",
              "Dashboard display",
              "Report generation"
            ]
          }
      
      ##consentTypes{id:consent_categories, type:layer}
        "Different consent categories"
        
        ##aiAccessConsent{id:ai_permissions}
          "AI access to health data"
          @cluster{controls, type:granular}
            "Per-category AI access"
            "lifestyle: Activity, sleep data"
            "cardiovascular: Heart health"
            "body_composition: Weight, BMI"
            "medical: Lab results"
            "advanced: Performance metrics"
          @/cluster
        
        ##retentionPolicies{id:data_retention}
          "Data retention controls"
          @cluster{policies, type:retention}
            "Per-category retention days"
            "Default: 90 days"
            "Minimum: 1 day"
            "Maximum: Indefinite (-1)"
          @/cluster
        
        ##exportControls{id:data_export}
          "Data export permissions"
          @cluster{controls, type:export}
            "auto_export_enabled: Boolean"
            "export_format: pdf|json|csv"
            "include_ai_interactions: Boolean"
          @/cluster
    
    ##privacyCompliance{id:gdpr_compliance, type:layer}
      "Privacy regulation compliance"
      
      ##auditLogging{id:access_logging}
        "Health data access logging"
        @evidence{
            file:"shared/schema.ts",
            lines:"552-564",
            code:"export const healthDataAccessLog = pgTable(...)"
        }
        @cluster{logging, type:audit}
          "Access timestamp"
          "Access type"
          "User consent verified"
          "Data categories accessed"
        @/cluster
      
      ##dataMinimization{id:privacy_by_design}
        "Minimize data collection/retention"
        @processing{
          principles:[
            "Collect only necessary data",
            "Respect retention settings",
            "Auto-delete expired data",
            "Anonymize when possible"
          ]
        }
      
      ##userRights{id:gdpr_rights}
        "User privacy rights"
        @cluster{rights, type:compliance}
          "Right to access"
          "Right to deletion"
          "Right to portability"
          "Right to rectification"
        @/cluster
    
    ##architecturalLayers{id:layers, type:architecture}
      "Consent system architecture"
      
      ##presentationLayer{id:ui_components}
        @cluster{components, type:react}
          "HealthDataConsentSettings.tsx"
          "Consent toggle components"
          "Retention sliders"
          "Export format selectors"
        @/cluster
      
      ##serviceLayer{id:consent_logic}
        @cluster{services, type:backend}
          "health-consent-service.ts"
          "Consent validation"
          "Access control checks"
          "Audit logging"
        @/cluster
      
      ##dataLayer{id:consent_storage}
        @cluster{storage, type:database}
          "userHealthConsent table"
          "healthDataAccessLog table"
          "User preferences integration"
        @/cluster
    
    ##integrationEvidence{id:verified_integration, type:validation}
      "Consent system integration"
      
      ##apiEndpoints{id:consent_routes}
        @evidence{
          file:"health-routes.ts",
          lines:"229-248",
          code:"Consent endpoints implementation"
        }
      
      ##serviceImplementation{id:consent_service}
        @evidence{
          file:"server/services/health-consent-service.ts",
          exists:true,
          purpose:"Consent management service"
        }
      
      ##schemaDefinition{id:database_schema}
        @evidence{
          file:"shared/schema.ts",
          lines:"534-599",
          code:"Consent tables and types"
        }
    
    ##dependencies{id:feature_dependencies, type:graph}
      "Consent system dependencies"
      
      ##securityDependencies{id:auth_system}
        @cluster{security, type:dependency}
          "User authentication"
          "Session management"
          "Permission system"
        @/cluster
      
      ##dataDependencies{id:health_data}
        @cluster{data, type:dependency}
          "Health categories"
          "User preferences"
          "Access patterns"
        @/cluster
    
    ##impacts{id:affected_features, type:graph}
      "Features impacted by consent"
      
      ##featureAccess{id:conditional_features}
        @cluster{effects, type:impact}
          "AI coaching availability"
          "Data export functionality"
          "Dashboard visibility"
          "Report generation"
        @/cluster
      
      ##compliance{id:regulatory_compliance}
        @cluster{effects, type:impact}
          "GDPR compliance"
          "HIPAA considerations"
          "User trust"
          "Legal protection"
        @/cluster