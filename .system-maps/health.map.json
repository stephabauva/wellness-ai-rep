{
  "lastUpdated": "2025-06-26T00:06:00Z",
  "dependencies": [],
  "features": {
    "metric-removal": {
      "description": "Allows a user to hide health metrics from their dashboard view. This does not delete the data, but updates the user's visibility preferences.",
      "userFlow": [
        "User clicks the 'Remove Metrics' button in HealthDataSection.",
        "The UI enters a removal mode.",
        "User selects one or more metrics via checkboxes on HealthMetricsCard.",
        "User clicks the 'Remove Selected' button.",
        "A PATCH request is made to /api/health-consent/visibility to update the user's preferences.",
        "The client-side cache for visibility settings is invalidated, causing a re-render.",
        "The HealthMetricsCard components re-render, hiding the selected metrics."
      ],
      "components": [
        "HealthDataSection",
        "HealthMetricsCard",
        "useHealthVisibilitySettings"
      ]
    }
  },
  "components": {
    "HealthDataSection": {
      "path": "client/src/components/HealthDataSection.tsx",
      "type": "React Component",
      "description": "Main container for the health dashboard. Manages state for removal mode and triggers the mutation to update visibility settings.",
      "calls": ["PATCH /api/health-consent/visibility"],
      "uses": [
        "useHealthDataApi",
        "useHealthVisibilitySettings",
        "HealthMetricsCard"
      ],
      "invalidates": ["query:healthVisibilitySettings"]
    },
    "HealthMetricsCard": {
      "path": "client/src/components/HealthMetricsCard.tsx",
      "type": "React Component",
      "description": "Displays a category of health metrics and provides checkboxes for selection during removal mode. Filters its own display based on visibility settings.",
      "calls": [],
      "uses": [],
      "invalidates": []
    },
    "useHealthDataApi": {
      "path": "client/src/hooks/useHealthDataApi.ts",
      "type": "React Hook",
      "description": "Fetches all raw and categorized health data.",
      "calls": ["GET /api/health-data/categories", "GET /api/health-data"],
      "uses": [],
      "invalidates": []
    },
    "useHealthVisibilitySettings": {
      "path": "client/src/hooks/useHealthVisibilitySettings.ts",
      "type": "React Hook",
      "description": "Manages fetching and updating the user's visibility preferences for metrics.",
      "calls": [
        "GET /api/health-consent/visibility",
        "PATCH /api/health-consent/visibility"
      ],
      "uses": [],
      "invalidates": []
    }
  },
  "apiEndpoints": {
    "GET /api/health-consent/visibility": {
      "description": "Fetches the user's current dashboard visibility settings from their preferences.",
      "handlerFile": "server/routes.ts",
      "requestBody": "",
      "response": "{ visible_metrics: string[], hidden_metrics: string[], ... }",
      "readsFrom": ["users.preferences.healthVisibilitySettings"],
      "modifies": []
    },
    "PATCH /api/health-consent/visibility": {
      "description": "Updates the user's dashboard visibility settings in their preferences.",
      "handlerFile": "server/routes.ts",
      "requestBody": "{ visible_metrics: string[], hidden_metrics: string[], ... }",
      "response": "{ ...updatedSettings }",
      "readsFrom": ["users"],
      "modifies": ["users.preferences.healthVisibilitySettings"]
    },
    "GET /api/health-data": {
      "description": "Fetches a list of all health data records for the user within a given time range.",
      "handlerFile": "server/routes.ts",
      "requestBody": "",
      "response": "[HealthMetric]",
      "readsFrom": ["healthData"],
      "modifies": []
    },
    "GET /api/health-data/categories": {
      "description": "Fetches health data records, grouped by category.",
      "handlerFile": "server/routes.ts",
      "requestBody": "",
      "response": "{ [categoryName]: [HealthMetric] }",
      "readsFrom": ["healthData"],
      "modifies": []
    }
  },
  "database": {
    "schemaFile": "shared/schema.ts",
    "tables": {
      "users": {
        "columns": {
          "id": { "type": "serial", "primaryKey": true },
          "preferences": { "type": "jsonb" }
        }
      },
      "healthData": {
        "columns": {
          "id": { "type": "serial", "primaryKey": true },
          "userId": { "type": "integer", "foreignKey": "users.id" },
          "dataType": { "type": "text" },
          "value": { "type": "text" },
          "timestamp": { "type": "timestamp" }
        }
      }
    }
  },
  "dataStores": {
    "query:healthVisibilitySettings": {
      "type": "React Query Key",
      "description": "Caches the user's health metric visibility settings on the client. Used by useHealthVisibilitySettings."
    }
  }
}
