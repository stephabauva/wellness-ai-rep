
{
  "tableOfContents": {
    "conversation-management": {
      "features": ["conversation-list", "conversation-persistence", "conversation-navigation"],
      "components": ["ConversationHistory", "ConversationListItem", "ConversationSearch"],
      "endpoints": ["GET /api/conversations", "DELETE /api/conversations/:id", "PUT /api/conversations/:id"]
    }
  },
  "integrationStatus": {
    "conversation-list": {
      "status": "active",
      "lastVerified": "2025-01-27",
      "knownIssues": [],
      "resolvedIssues": ["Latest conversations now appearing with metadata", "UI component fully integrated with enhanced API data"]
    },
    "conversation-persistence": {
      "status": "active",
      "lastVerified": "2025-01-27",
      "knownIssues": [],
      "resolvedIssues": ["Conversation update endpoint implemented"]
    },
    "conversation-navigation": {
      "status": "active",
      "lastVerified": "2025-01-27",
      "knownIssues": [],
      "resolvedIssues": ["Users can now access and switch between previous conversations", "Conversation context switching working properly"]
    }
  },
  "lastUpdated": "2025-07-02T10:15:00Z",
  "dependencies": ["core-messaging", "memory"],
  "featureGroups": {
    "conversation-management": {
      "description": "User interface and backend functionality for managing conversation history, including listing, searching, and navigating previous conversations",
      "features": {
        "conversation-list": {
          "description": "Display list of user's previous conversations with titles, timestamps, and preview text",
          "userFlow": [
            "User clicks on conversation history section",
            "System displays list of previous conversations",
            "User sees conversation titles, timestamps, and message previews",
            "User can scroll through paginated conversation list"
          ],
          "systemFlow": [
            "Fetch conversations from database ordered by last activity",
            "Generate conversation titles from first message or AI summary",
            "Apply pagination to conversation results",
            "Return formatted conversation metadata to frontend"
          ],
          "components": ["ConversationHistory", "ConversationListItem"],
          "dataFlowTrace": {
            "requestPath": ["Frontend: ConversationHistory.tsx", "Hook: useChatMessages.ts", "API: GET /api/conversations", "Handler: server/routes/chat-routes.ts", "Database: conversations"],
            "expectedPath": ["Frontend: ConversationHistory.tsx", "Hook: useChatMessages.ts", "API: GET /api/conversations", "Handler: server/routes/chat-routes.ts", "Database: conversations"],
            "pathVerified": false,
            "bypassedComponents": [],
            "actualHandler": "server/routes/chat-routes.ts:GET /api/conversations",
            "streamingPattern": "Standard REST API retrieval"
          },
          "apiIntegration": {
            "expectedEndpoints": ["GET /api/conversations"],
            "actualEndpoints": ["GET /api/conversations"],
            "integrationGaps": [],
            "resolvedGaps": ["Frontend now properly consuming enhanced conversation data", "Conversation metadata generation working", "React Query cache invalidation implemented", "Go AI Gateway dependency disabled"],
            "cacheDependencies": {
              "invalidates": ["query:conversations"],
              "refreshesComponents": ["ConversationHistory", "ChatSection"]
            },
            "uiConsistencyValidation": {
              "tested": true,
              "knownIssues": [],
              "resolvedIssues": ["Latest conversations displaying with metadata", "Conversation list properly populated"]
            }
          },
          "logging": {
            "$ref": "../infrastructure/logging.map.json#/conversation-logging"
          },
          "performance": {
            "$ref": "../infrastructure/performance.map.json#/conversation-performance"
          },
          "tests": []
        },
        "conversation-persistence": {
          "description": "Automatic saving and persistence of conversation data with proper metadata",
          "userFlow": [
            "User engages in chat conversation",
            "System automatically saves conversation with metadata",
            "Conversation appears in history with proper title and timestamp",
            "User can access saved conversation later"
          ],
          "systemFlow": [
            "Create conversation record on first message",
            "Update conversation metadata on each new message",
            "Generate or update conversation title based on content",
            "Store conversation with proper indexing for retrieval"
          ],
          "components": ["ChatSection", "ConversationHistory"],
          "dataFlowTrace": {
            "requestPath": ["Frontend: ChatSection.tsx", "Hook: useStreamingChat.ts", "API: POST /api/chat", "Handler: server/routes/chat-routes.ts", "Database: conversations, conversation_messages"],
            "expectedPath": ["Frontend: ChatSection.tsx", "Hook: useStreamingChat.ts", "API: POST /api/chat", "Handler: server/routes/chat-routes.ts", "Database: conversations, conversation_messages"],
            "pathVerified": true,
            "bypassedComponents": [],
            "actualHandler": "server/routes/chat-routes.ts:POST /api/chat",
            "streamingPattern": "Database persistence during chat flow"
          },
          "apiIntegration": {
            "expectedEndpoints": ["POST /api/chat", "PUT /api/conversations/:id"],
            "actualEndpoints": ["POST /api/chat", "PUT /api/conversations/:id"],
            "integrationGaps": [],
            "resolvedGaps": ["Conversation update endpoint implemented"],
            "cacheDependencies": {
              "invalidates": ["query:conversations", "query:messages"],
              "refreshesComponents": ["ConversationHistory", "ChatSection"]
            },
            "uiConsistencyValidation": {
              "tested": true,
              "knownIssues": []
            }
          },
          "logging": {
            "$ref": "../infrastructure/logging.map.json#/conversation-persistence-logging"
          },
          "performance": {
            "$ref": "../infrastructure/performance.map.json#/conversation-persistence-performance"
          },
          "tests": []
        },
        "conversation-navigation": {
          "description": "Allow users to click on previous conversations and resume them in the chat interface",
          "userFlow": [
            "User views conversation history",
            "User clicks on a previous conversation",
            "System loads conversation messages in chat interface",
            "User can continue conversation from where they left off"
          ],
          "systemFlow": [
            "Receive conversation selection from frontend",
            "Load conversation messages from database",
            "Set active conversation context",
            "Update chat interface with conversation history",
            "Enable continuation of selected conversation"
          ],
          "components": ["ConversationHistory", "ChatSection", "MessageDisplayArea"],
          "dataFlowTrace": {
            "requestPath": ["Frontend: ConversationHistory.tsx", "Context: AppContext.selectConversation", "API: GET /api/conversations/:id/messages", "Handler: server/routes/chat-routes.ts"],
            "expectedPath": ["Frontend: ConversationHistory.tsx", "Hook: useChatMessages.ts", "API: GET /api/conversations/:id/messages", "Handler: server/routes/chat-routes.ts"],
            "pathVerified": true,
            "bypassedComponents": [],
            "actualHandler": "server/routes/chat-routes.ts:GET /api/conversations/:id/messages",
            "streamingPattern": "Conversation context switching"
          },
          "apiIntegration": {
            "expectedEndpoints": ["GET /api/conversations/:id/messages", "PUT /api/conversations/:id/select"],
            "actualEndpoints": ["GET /api/conversations/:id/messages"],
            "integrationGaps": [],
            "resolvedGaps": ["Conversation selection API working through AppContext", "Conversation context switching mechanism active"],
            "cacheDependencies": {
              "invalidates": ["query:messages", "query:currentConversation"],
              "refreshesComponents": ["MessageDisplayArea", "ChatSection", "ConversationHistory"]
            },
            "uiConsistencyValidation": {
              "tested": true,
              "knownIssues": [],
              "resolvedIssues": ["Can click to load previous conversations", "Active conversation indication working"]
            }
          },
          "logging": {
            "$ref": "../infrastructure/logging.map.json#/conversation-navigation-logging"
          },
          "performance": {
            "$ref": "../infrastructure/performance.map.json#/conversation-navigation-performance"
          },
          "tests": []
        }
      }
    }
  },
  "components": {
    "ConversationHistory": {
      "name": "ConversationHistory",
      "path": "client/src/components/ConversationHistory.tsx",
      "description": "Main conversation history interface displaying list of previous conversations",
      "uses": ["useChatMessages", "ConversationListItem", "ConversationSearch"],
      "integrationIssues": [],
      "resolvedIssues": ["Now properly consuming enhanced conversation API data", "Click handlers for conversation selection implemented"]
    },
    "ConversationListItem": {
      "name": "ConversationListItem",
      "path": "client/src/components/ConversationListItem.tsx",
      "description": "Individual conversation item in history list with title, timestamp, and preview",
      "uses": [],
      "integrationIssues": [],
      "resolvedIssues": ["Component integrated into ConversationHistory component", "Conversation selection functionality working"]
    },
    "ConversationSearch": {
      "name": "ConversationSearch",
      "path": "client/src/components/ConversationSearch.tsx",
      "description": "Search functionality for filtering conversation history",
      "uses": [],
      "integrationIssues": [],
      "resolvedIssues": ["Search functionality integrated into ConversationHistory component"]
    }
  },
  "apiEndpoints": {
    "/api/conversations": {
      "method": "GET",
      "handler": "server/routes/chat-routes.ts",
      "description": "Retrieve user's conversation history with pagination",
      "readsFrom": ["conversations", "conversation_messages"],
      "modifies": [],
      "implementationStatus": "active"
    },
    "/api/conversations/:id": {
      "method": "DELETE",
      "handler": "server/routes/chat-routes.ts",
      "description": "Delete a specific conversation and its messages",
      "readsFrom": ["conversations"],
      "modifies": ["conversations", "conversation_messages"],
      "implementationStatus": "active"
    },
    "/api/conversations/:id": {
      "method": "PUT",
      "handler": "server/routes/chat-routes.ts",
      "description": "Update conversation metadata (title, etc.)",
      "readsFrom": ["conversations"],
      "modifies": ["conversations"],
      "implementationStatus": "active"
    },
    "/api/conversations/:id/messages": {
      "method": "GET",
      "handler": "server/routes/chat-routes.ts",
      "description": "Load messages for a specific conversation",
      "readsFrom": ["conversation_messages", "message_attachments"],
      "modifies": [],
      "implementationStatus": "active"
    }
  },
  "database": {
    "tables": {
      "conversations": {
        "description": "Chat conversation metadata and context",
        "columns": ["id", "title", "created_at", "updated_at", "user_id"],
        "relations": ["conversation_messages"],
        "indexes": ["user_id", "created_at"],
        "integrationIssues": [],
        "resolvedIssues": ["Title generation logic working", "Conversation selection tracking active"]
      },
      "conversation_messages": {
        "description": "Individual chat messages within conversations",
        "columns": ["id", "conversation_id", "role", "content", "created_at", "message_type", "status"],
        "relations": ["conversations", "message_attachments"],
        "indexes": ["conversation_id", "created_at"],
        "integrationIssues": [],
        "resolvedIssues": ["Messages properly linked to conversation history interface through API endpoints"]
      }
    }
  }
}
