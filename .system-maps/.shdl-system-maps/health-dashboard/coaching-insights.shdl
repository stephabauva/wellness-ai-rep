@context{domain:health_dashboard, feature:coaching_insights, version:1.0}

#ROOT
  ##coachingInsights{id:ai_health_coaching, type:feature, @important}
    "AI-powered health coaching insights based on health data"
    
    ##dataFlowTrace{id:complete_cycle, type:workflow, @critical}
      "Complete coaching insights generation flow"
      
      ##userAction{id:trigger, type:interaction, @passive}
        "Coaching insights load with dashboard"
        @processing{
          trigger:"Component mount or data update",
          context:"Current health metrics available"
        }
      
      ##frontendFlow{id:client_processing, type:layer, @sequential}
        "Client-side coaching insights handling"
        
        ##componentStructure{id:insights_component}
          "CoachingInsights component"
          @file{path:"client/src/components/health/CoachingInsights.tsx"}
          @cluster{features, type:ui_elements}
            "Insight cards"
            "Recommendation sections"
            "Progress indicators"
            "Action buttons"
          @/cluster
        
        ##dataPreparation{id:context_gathering}
          "Gather health context for AI"
          @processing{
            metrics:"Recent health data",
            trends:"Calculate changes over time",
            goals:"User health goals",
            history:"Previous insights"
          }
        
        ##aiRequest{id:insight_generation, @critical}
          "Request AI coaching insights"
          @processing{
            endpoint:"/api/coaching/insights",
            method:"POST",
            payload:{
              healthMetrics: "current data",
              timeRange: "analysis period",
              focusAreas: "user preferences"
            }
          }
      
      ##aiProcessing{id:insight_generation_logic, type:layer}
        "AI insight generation process"
        
        ##contextAnalysis{id:health_analysis}
          "Analyze health data context"
          @cluster{analysis, type:ai_processing}
            "Trend identification"
            "Pattern recognition"
            "Anomaly detection"
            "Goal progress assessment"
          @/cluster
        
        ##promptEngineering{id:ai_prompts}
          "Generate AI prompts"
          @processing{
            template:"Health coaching prompt template",
            personalization:"User preferences",
            context:"Current health state",
            constraints:"Medical disclaimer"
          }
        
        ##insightCategories{id:coaching_types}
          "Types of coaching insights"
          @cluster{categories, type:insights}
            "Activity recommendations"
            "Sleep optimization"
            "Nutrition guidance"
            "Stress management"
            "Goal adjustments"
            "Health alerts"
          @/cluster
      
      ##insightPresentation{id:ui_display, type:layer}
        "Present coaching insights"
        
        ##insightCards{id:recommendation_cards}
          "Individual insight displays"
          @cluster{card_elements, type:ui}
            "Insight title"
            "Recommendation text"
            "Supporting metrics"
            "Action items"
            "Priority indicator"
          @/cluster
        
        ##prioritization{id:insight_ranking}
          "Prioritize insights by importance"
          @processing{
            factors:[
              "Health impact",
              "User goals alignment",
              "Actionability",
              "Urgency"
            ],
            display:"Top 3-5 insights"
          }
        
        ##actionability{id:actionable_items}
          "Make insights actionable"
          @cluster{actions, type:interaction}
            "Set reminders"
            "Update goals"
            "Track progress"
            "Learn more links"
          @/cluster
    
    ##architecturalLayers{id:layers, type:architecture}
      "Coaching insights architecture"
      
      ##presentationLayer{id:ui_components}
        @cluster{components, type:react}
          "CoachingInsights.tsx"
          "InsightCard components"
          "Priority badges"
          "Action buttons"
        @/cluster
      
      ##aiIntegrationLayer{id:ai_service}
        @cluster{services, type:ai}
          "AI provider abstraction"
          "Prompt management"
          "Response parsing"
          "Context preparation"
        @/cluster
      
      ##dataAnalysisLayer{id:analytics}
        @cluster{analysis, type:logic}
          "Trend calculation"
          "Pattern matching"
          "Statistical analysis"
          "Health scoring"
        @/cluster
    
    ##errorBoundaries{id:error_handling, type:reliability}
      "Coaching insights error handling"
      
      ##aiErrors{id:generation_failures}
        @cluster{handling, type:errors}
          "AI service unavailable"
          "Invalid response format"
          "Timeout handling"
          "Fallback insights"
        @/cluster
      
      ##dataErrors{id:insufficient_data}
        @cluster{handling, type:errors}
          "Insufficient health data"
          "Missing key metrics"
          "Invalid calculations"
          "Generic recommendations"
        @/cluster
    
    ##medicalConsiderations{id:health_safety, type:compliance}
      "Medical safety and disclaimers"
      
      ##disclaimers{id:medical_disclaimers}
        @cluster{safety, type:legal}
          "Not medical advice"
          "Consult healthcare provider"
          "General wellness only"
          "Emergency warnings"
        @/cluster
      
      ##safetyBounds{id:recommendation_limits}
        @cluster{constraints, type:safety}
          "Avoid extreme recommendations"
          "Respect medical conditions"
          "Conservative targets"
          "Evidence-based suggestions"
        @/cluster
    
    ##integrationEvidence{id:verified_integration, type:validation}
      "Coaching insights integration"
      
      ##componentUsage{id:dashboard_integration}
        @evidence{
          file:"HealthDataSection.tsx",
          lines:"501",
          code:"<CoachingInsights />"
        }
      
      ##componentFile{id:insights_component}
        @evidence{
          file:"client/src/components/health/CoachingInsights.tsx",
          exists:true,
          purpose:"AI coaching insights display"
        }
    
    ##dependencies{id:feature_dependencies, type:graph}
      "Coaching insights dependencies"
      
      ##dataDependencies{id:health_context}
        @cluster{data, type:dependency}
          "Current health metrics"
          "Historical health data"
          "User preferences"
          "Health goals"
        @/cluster
      
      ##aiDependencies{id:ai_services}
        @cluster{services, type:dependency}
          "AI provider (OpenAI/Google)"
          "Prompt templates"
          "Context window management"
        @/cluster
    
    ##impacts{id:affected_features, type:graph}
      "Features impacted by coaching"
      
      ##userEngagement{id:motivation}
        @cluster{effects, type:impact}
          "Increased app engagement"
          "Goal achievement"
          "Behavior change"
          "Health awareness"
        @/cluster
      
      ##dataUtilization{id:value_creation}
        @cluster{effects, type:impact}
          "Makes data actionable"
          "Personalized experience"
          "Continuous improvement"
          "Health outcomes"
        @/cluster