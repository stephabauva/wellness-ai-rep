@context{domain:health_dashboard, feature:heart_rate_chart, version:1.0}

#ROOT
  ##heartRateChart{id:heart_rate_visualization, type:feature, @critical}
    "Heart rate chart showing cardiovascular metrics over time"
    
    ##dataFlowTrace{id:complete_cycle, type:workflow, @critical}
      "Complete data flow for heart rate visualization"
      
      ##userAction{id:trigger, type:interaction, @conditional}
        "Chart renders when heart rate data exists"
        @processing{
          trigger:"Component mount with cardiovascular data",
          condition:"Heart rate metrics present in health data"
        }
      
      ##frontendFlow{id:client_processing, type:layer, @sequential}
        "Client-side heart rate chart rendering"
        
        ##componentStructure{id:chart_component}
          "HeartRateChart component"
          @file{path:"client/src/components/health/HeartRateChart.tsx"}
          @cluster{props, type:interface}
            "data: HeartRateDataPoint[]"
            "timeRange?: string"
            "showZones?: boolean"
          @/cluster
        
        ##dataProcessing{id:hr_data_prep}
          "Process heart rate data for visualization"
          @cluster{metrics, type:data_extraction}
            "heart_rate - Current heart rate"
            "resting_heart_rate - Resting HR"
            "hrv - Heart rate variability"
            "blood_pressure_systolic"
            "blood_pressure_diastolic"
          @/cluster
          @processing{
            grouping:"Group by timestamp",
            aggregation:"Average if multiple readings",
            zones:"Calculate HR zones based on age"
          }
        
        ##zoneCalculation{id:hr_zones}
          "Calculate heart rate training zones"
          @cluster{zones, type:calculation}
            "Rest Zone: < 50% max HR"
            "Fat Burn: 50-60% max HR"
            "Cardio: 60-70% max HR"
            "Peak: 70-85% max HR"
            "Maximum: > 85% max HR"
          @/cluster
          @processing{
            maxHR:"220 - age (estimated)",
            zoneColors:"Different colors per zone"
          }
        
        ##chartConfiguration{id:visualization_setup}
          "Configure heart rate visualization"
          @cluster{chart_type, type:recharts}
            "LineChart for HR trends"
            "Area bands for HR zones"
            "Dual Y-axis for HR and BP"
            "Custom tooltips with context"
          @/cluster
      
      ##dataVisualization{id:chart_rendering, type:layer}
        "Render heart rate chart"
        
        ##lineRendering{id:hr_lines}
          "Render HR data lines"
          @cluster{lines, type:visualization}
            "Heart Rate line (primary, solid)"
            "Resting HR line (dashed, secondary)"
            "HRV line (dotted, tertiary)"
          @/cluster
        
        ##zoneVisualization{id:zone_bands}
          "Render HR zone bands"
          @cluster{areas, type:background}
            "Colored bands for each zone"
            "Opacity for visibility"
            "Labels for zone names"
          @/cluster
        
        ##bloodPressureOverlay{id:bp_display}
          "Optional BP overlay"
          @cluster{elements, type:secondary_axis}
            "Systolic/Diastolic range bars"
            "Secondary Y-axis for mmHg"
            "Different visual style"
          @/cluster
    
    ##architecturalLayers{id:layers, type:architecture}
      "Component architecture layers"
      
      ##presentationLayer{id:ui_components}
        @cluster{components, type:react}
          "HeartRateChart.tsx - Main component"
          "Recharts LineChart component"
          "Custom tooltip component"
          "Legend with zone info"
        @/cluster
        @cluster{styling, type:ui}
          "Zone-specific color scheme"
          "Responsive chart sizing"
          "Card container styling"
        @/cluster
      
      ##calculationLayer{id:hr_calculations}
        @cluster{algorithms, type:logic}
          "Max HR calculation"
          "Zone boundary computation"
          "Moving average for smoothing"
          "Outlier detection"
        @/cluster
      
      ##dataLayer{id:data_handling}
        @cluster{processing, type:data}
          "Time series data structure"
          "Missing data interpolation"
          "Data point aggregation"
        @/cluster
    
    ##errorBoundaries{id:error_handling, type:reliability}
      "Error handling mechanisms"
      
      ##dataValidation{id:input_checks}
        @cluster{validation, type:safety}
          "Validate HR values (30-250 bpm)"
          "Handle missing timestamps"
          "Protect against null data"
        @/cluster
      
      ##visualFallbacks{id:display_safety}
        @cluster{fallbacks, type:ui}
          "Empty state for no data"
          "Error message for invalid data"
          "Default zone calculations"
        @/cluster
    
    ##performanceConsiderations{id:optimization, type:performance}
      "Performance optimizations"
      
      ##dataReduction{id:point_optimization}
        @cluster{strategies, type:performance}
          "Downsample for large datasets"
          "Viewport-based rendering"
          "Memoized zone calculations"
        @/cluster
      
      ##renderingEfficiency{id:chart_performance}
        @cluster{optimizations, type:rendering}
          "Canvas rendering for many points"
          "Debounced interactions"
          "Lazy zone calculation"
        @/cluster
    
    ##medicalConsiderations{id:health_accuracy, type:medical}
      "Medical accuracy and disclaimers"
      
      ##dataAccuracy{id:medical_validity}
        @cluster{considerations, type:medical}
          "Device accuracy disclaimers"
          "Not for medical diagnosis"
          "Consult healthcare provider"
        @/cluster
      
      ##zonePersonalization{id:individual_factors}
        @cluster{factors, type:personalization}
          "Age-based calculations"
          "Fitness level adjustments"
          "Medication considerations"
        @/cluster
    
    ##integrationEvidence{id:verified_integration, type:validation}
      "Integration verification"
      
      ##componentExistence{id:file_verification}
        @evidence{
          file:"client/src/components/health/HeartRateChart.tsx",
          exists:true,
          purpose:"Heart rate visualization component"
        }
      
      ##dataExtraction{id:hr_data_processing}
        @evidence{
          description:"Parent processes cardiovascular data",
          metrics:['heart_rate', 'resting_heart_rate', 'hrv'],
          category:"cardiovascular"
        }
    
    ##dependencies{id:feature_dependencies, type:graph}
      "Component dependencies"
      
      ##dataDependencies{id:data_requirements}
        @cluster{sources, type:dependency}
          "Cardiovascular health data"
          "User age for zone calculation"
          "Time range from dashboard"
        @/cluster
      
      ##visualizationDependencies{id:chart_libs}
        @cluster{libraries, type:dependency}
          "Recharts for charting"
          "Color utilities for zones"
          "Date formatting utilities"
        @/cluster
    
    ##impacts{id:affected_features, type:graph}
      "Features impacted by HR chart"
      
      ##healthInsights{id:cardiovascular_understanding}
        @cluster{effects, type:impact}
          "Shows cardiovascular trends"
          "Identifies abnormal patterns"
          "Tracks fitness improvements"
        @/cluster
      
      ##coachingIntegration{id:ai_insights}
        @cluster{effects, type:impact}
          "AI references HR patterns"
          "Zone training recommendations"
          "Recovery insights from HRV"
        @/cluster